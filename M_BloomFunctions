Public Function M_GetHistoricalData(ticker As String, m_fields() As Variant, start_date As Date, end_date As Date, _            frequency As String, session As blpapicomLib.session) As VariantDim res As Variant'''' Init RequestDim refdataservice As blpapicomLib.ServiceSet refdataservice = session.GetService("//blp/refdata")Dim req As blpapicomLib.RequestSet req = refdataservice.CreateRequest("HistoricalDataRequest")    '''' input ticker    req.GetElement("securities").AppendValue (ticker)        '''' input fields    For i = 0 To UBound(m_fields)    req.GetElement("fields").AppendValue (m_fields(i))    Next i        Dim nb_fields As Integer: nb_fields = UBound(m_fields) + 1        req.Set "periodicityAdjustment", "ACTUAL"    req.Set "periodicitySelection", frequency    req.Set "startDate", M_StringDate(start_date)    req.Set "endDate", M_StringDate(end_date)    Set cid = session.SendRequest(req)    Dim done As Boolean    done = False        Do While Not done        Dim eventObj As blpapicomLib.Event        Set eventObj = session.NextEvent                If eventObj.EventType = PARTIAL_RESPONSE Or _          eventObj.EventType = RESPONSE Then            Dim it As blpapicomLib.MessageIterator            Set it = eventObj.CreateMessageIterator()                    Do While it.Next()            Dim msg As Message            Set msg = it.Message            Dim securityData As Element            Dim securityName As Element            Dim fieldData As Element            Set securityData = msg.GetElement("securityData")            Set securityName = securityData.GetElement("security")            Set fieldData = securityData.GetElement("fieldData")                        '''' size output array according to number of historical dates and fields            If fieldData.NumValues > 0 Then            ReDim res(fieldData.NumValues - 1, nb_fields)            Else            ReDim res(0, nb_fields)            res(0, 0) = end_date            For g = 1 To nb_fields            res(0, g) = "#N/A N.A."            Next g            M_GetHistoricalData = res            Exit Function            End If                        Dim b As Integer                            For b = 0 To fieldData.NumValues - 1                    Dim fields As blpapicomLib.Element                    Set fields = fieldData.GetValue(b)                    Dim a As Integer                    Dim numFields As Integer                    numFields = fields.NumElements                                        For a = 0 To numFields - 1                        Dim field As Element                                                '''' populate the output array                        res(b, a) = fields.GetElement(a)                                        Next                Next b                    Loop            If eventObj.EventType = RESPONSE Then                done = True            End If        End If    Loop    M_GetHistoricalData = res       End FunctionPublic Function M_GetStaticData(sec() As String, m_fields() As Variant, session As blpapicomLib.session) As Variant()Dim res As Variant'''' Init RequestDim refdataservice As blpapicomLib.ServiceSet refdataservice = session.GetService("//blp/refdata")Dim req As blpapicomLib.RequestSet req = refdataservice.CreateRequest("ReferenceDataRequest")'''' input tickerFor h = 0 To UBound(sec)req.GetElement("securities").AppendValue (sec(h))Next h'''' input fieldsFor h = 0 To UBound(m_fields)req.GetElement("fields").AppendValue (m_fields(h))Next hDim nb_sec As Integer: nb_sec = req.GetElement("securities").CountDim nb_fields As Integer: nb_fields = req.GetElement("fields").Count'''' size output array according to number of historical dates and fieldsReDim res(nb_sec - 1, nb_fields - 1)Dim currentrow As Integer: currentrow = 0    Set cid = session.SendRequest(req)    Dim done As Boolean    done = False        Do While Not done            Dim eventObj As blpapicomLib.Event        Set eventObj = session.NextEvent                If eventObj.EventType = PARTIAL_RESPONSE Or _          eventObj.EventType = RESPONSE Then            Dim it As blpapicomLib.MessageIterator            Set it = eventObj.CreateMessageIterator()                     Do While it.Next()            Dim msg As Message            Set msg = it.Message                        Dim numSecurities As Integer            numSecurities = msg.GetElement("securityData").NumValues            Dim i As Integer                                    For i = 0 To numSecurities - 1                Dim security As Element                Set security = msg.GetElement("securityData").GetValue(i)                ' Send "security.GetElement("security").Value" to display                Dim fields As Element                Set fields = security.GetElement("fieldData")                Dim a As Integer                Dim numFields As Integer                numFields = fields.NumElements                                For a = 0 To numFields - 1                    fldplace = a                    Dim field As Element                    res(currentrow, a) = CStr(fields.GetElement(a))                    ' Send field.Name and field.Value to display                Next                currentrow = currentrow + 1            Next        Loop            If eventObj.EventType = RESPONSE Then                done = True            End If        End If    Loop        M_GetStaticData = res       End FunctionPublic Function M_GetBulkData(sec As String, m_fields() As Variant, session As blpapicomLib.session) As Variant()Dim res As Variant'''' Init RequestDim refdataservice As blpapicomLib.ServiceSet refdataservice = session.GetService("//blp/refdata")Dim req As blpapicomLib.RequestSet req = refdataservice.CreateRequest("ReferenceDataRequest")'''' input ticker'For h = 0 To UBound(sec)req.GetElement("securities").AppendValue (sec)'Next h'''' input fieldsFor h = 0 To UBound(m_fields)req.GetElement("fields").AppendValue (m_fields(h))Next hDim nb_sec As Integer: nb_sec = req.GetElement("securities").CountDim nb_fields As Integer: nb_fields = req.GetElement("fields").Count'''' size output array according to number of historical dates and fieldsReDim res(0)    Set cid = session.SendRequest(req)    Dim done As Boolean    done = False        k = 0    once = 0        Do While Not done        Dim eventObj As blpapicomLib.Event    Set eventObj = session.NextEvent        If eventObj.EventType = PARTIAL_RESPONSE Or _      eventObj.EventType = RESPONSE Then        Dim it As blpapicomLib.MessageIterator        Set it = eventObj.CreateMessageIterator()    Do While it.Next()                    Dim i As Integer                Dim msg As Message                Dim numSecurities As Integer                Set msg = it.Message                numSecurities = msg.GetElement("securityData").NumValues                                For i = 0 To numSecurities - 1                    Dim security As Element                    Set security = msg.GetElement("securityData").GetValue(i)'                    res(k, 0) = security.GetElement("security").Value                    Dim fieldArray As Element                    Set fieldArray = security.GetElement("fieldData")                    Dim a As Integer                    Dim numfieldArray As Integer                    numfieldArray = fieldArray.NumElements                                        For a = 0 To numfieldArray - 1                        Dim field As blpapicomLib.Element                        Set field = fieldArray.GetElement(a)                                                If field.DataType = 15 Then                            Dim numBulkValues As Long                            numBulkValues = field.NumValues                            Dim index As Long                                                        For index = 0 To numBulkValues - 1                                Dim bulkElement As blpapicomLib.Element                                Set bulkElement = field.GetValue(index)                                Dim numBulkElements As Integer                                numBulkElements = bulkElement.NumElements                                Dim ind2 As Long                                                                ReDim Preserve res(numBulkValues - 1)                                                                For ind2 = 0 To numBulkElements - 1                                    Dim elem As blpapicomLib.Element                                    Set elem = bulkElement.GetElement(ind2)                                    res(index) = elem.Value                                Next ind2                            Next index'                        Else'                            Sheet1.Cells(i + 4, a + 5).Value = field.Name & " = " & field.Value                        End If'                        k = k + 1                    Next                Next            Loop            If eventObj.EventType = RESPONSE Then                done = True            End If        End If    Loop        M_GetBulkData = res       End FunctionFunction M_StringDate(m_date As Date) As StringDim yea, mon, dai As StringIf Len(CStr(Year(m_date))) < 4 Thenyea = "20" & CStr(Year(m_date))Elseyea = CStr(Year(m_date))End IfIf Len(CStr(Month(m_date))) < 2 Thenmon = "0" & CStr(Month(m_date))Elsemon = CStr(Month(m_date))End IfIf Len(CStr(Day(m_date))) < 2 Thendai = "0" & CStr(Day(m_date))Elsedai = CStr(Day(m_date))End IfM_StringDate = yea & mon & daiEnd Function''Sub test()''Dim session As blpapicomLib.session'Dim refdataservice As blpapicomLib.Service''' Set session = New blpapicomLib.session'    session.Start''    session.OpenService ("//blp/refdata")'    Set refdataservice = session.GetService("//blp/refdata")''    Dim fields(0) As Variant: fields(0) = "INDX_MEMBERS"''    Dim sec(1) As String: sec(0) = "SPX INDEX"'    sec(1) = "CAC INDEX"''    Dim ticker As String: ticker = "SPX Index"''    Dim res As Variant'''    res = M_GetHistoricalData("GOOG US Equity", fields, #6/14/2009#, #6/9/2010#, "DAILY", req)''    res = M_GetBulkData2(sec, fields, session)''End Sub
