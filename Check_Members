Private v_seclist() As StringPrivate min_price As SinglePrivate min_OI As SinglePrivate min_cap  As SinglePrivate session As blpapicomLib.sessionSub check_memb()Sh_Underlyings.ActivateSh_Underlyings.Range("Match_Output", Sh_Underlyings.Range("Match_Output").End(xlDown)).ClearContentsDim icount As IntegerWhile Sheets("Control").Range("Universe_Index").Offset(1 + icount, 0) <> ""    Sh_Underlyings.Range("IndexList").Offset(icount + 1, 0).Value = Sheets("Control").Range("Universe_Index").Offset(1 + icount, 0).Value    icount = icount + 1WendiUnderlyingNumber = Sh_Underlyings.Range("IndexList", Sh_Underlyings.Range("IndexList").End(xlDown)).CountApplication.StatusBar = "Retrieving Index Members..."'''' get security namesReDim v_seclist(iUnderlyingNumber - 2)'ReDim v_seclist(Sh_Underlyings.Range(Cells(3, 2), Cells(3, 2).End(xlDown)).Count - 1)For Each cell In Sh_Underlyings.Range(Cells(3, 2), Cells(3 + iUnderlyingNumber - 2, 2))    v_seclist(cell.Row - 3) = cellNext cell'''''''' get members of indicesCall get_index_members(v_seclist())'''' get filters rangemin_price = Sh_Underlyings.Range("Min_Price")min_OI = Sh_Underlyings.Range("Min_Open_Interest")min_cap = Sh_Underlyings.Range("Min_Capitalization") * 1000000'''''''' check underlying characterisrics with filtersCall get_infos_and_retreat(v_seclist(), min_price, min_OI, min_cap)'''' display and sort by alphabetical orderWith Sh_Underlyings.Range(Cells(3, 7), Cells(3 + UBound(v_seclist), 7))    .Value = Application.Transpose(v_seclist())    .SelectEnd WithSelection.Sort Key1:=Range("G3"), Order1:=xlAscending, Header:=xlGuess, _        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, _        DataOption1:=xlSortNormal''''Application.StatusBar = FalseEnd SubFunction get_index_members(v_seclist() As String)Dim results As VariantDim temp_results As VariantDim m_rslt() As StringReDim m_rslt(0)Dim v_fields() As Variant: v_fields = Array("INDX_MEMBERS")''' init bloom Set session = New blpapicomLib.session session.Start session.OpenService ("//blp/refdata")For i = 0 To UBound(v_seclist)results = M_BloomFunctions.M_GetBulkData(v_seclist(i), v_fields(), session)    temp_results = results    If UBound(temp_results) > 0 Then            If UBound(m_rslt) > 0 Then            last_line = UBound(m_rslt) + 1            Else            last_line = 0        End If            ReDim Preserve m_rslt(last_line + UBound(temp_results, 1))                n = 0                For j = last_line To UBound(m_rslt)            'We use US ticker for ALL names            m_rslt(j) = left(CStr(temp_results(n)), Len(CStr(temp_results(n))) - 3) & " US"'            m_rslt(j) = CStr(temp_results(n))            n = n + 1        Next j        Else            Dim ticker As String                If m_rslt(0) = "" Then            ticker = left(v_seclist(i), Len(v_seclist(i)) - 7)            m_rslt(UBound(m_rslt)) = ticker        Else            ReDim Preserve m_rslt(UBound(m_rslt) + 1)            ticker = left(v_seclist(i), Len(v_seclist(i)) - 7)            m_rslt(UBound(m_rslt)) = CStr(ticker)        End If    End If    Next iCall delete_double(m_rslt())v_seclist = m_rsltEnd FunctionFunction delete_double(vec() As String) As VariantDim vec_out() As StringFor i = 0 To UBound(vec)    For j = 0 To UBound(vec)        If i <> j Then            If vec(i) = vec(j) Then            vec(j) = "isdble"            Exit For            End If        End If    Next jNext in = 0ReDim vec_out(n)For i = 0 To UBound(vec)If vec(i) <> "isdble" ThenReDim Preserve vec_out(n)vec_out(n) = vec(i)n = n + 1End IfNext ivec = vec_outEnd FunctionSub get_infos_and_retreat(sec_list() As String, min_price As Single, min_OI As Single, min_cap As Single)For i = 0 To UBound(sec_list)sec_list(i) = sec_list(i) & " Equity"Next iDim v_fields() As Variant: v_fields = Array("DS587", "PX_LAST", "OPEN_INT_TOTAL_CALL", "OPEN_INT_TOTAL_PUT", "CUR_MKT_CAP")''' init bloom Set session = New blpapicomLib.session session.Start session.OpenService ("//blp/refdata")Dim data1 As Variantdata1 = M_BloomFunctions.M_GetStaticData(sec_list(), v_fields(), session)'''' get number of underlyings matching with parametersn = 0For i = 0 To UBound(data1, 1)If CDbl(data1(i, 1)) < min_price Or CDbl(data1(i, 2)) + CDbl(data1(i, 3)) < min_OI Or CDbl(data1(i, 4)) < min_cap ThenElsen = n + 1End IfNext i'''' give size to the output arrayDim data2() As StringReDim data2(n - 1)'''' fill the output arrayn = 0For i = 0 To UBound(data1, 1)If CDbl(data1(i, 1)) < min_price Or CDbl(data1(i, 2)) + CDbl(data1(i, 3)) < min_OI Or CDbl(data1(i, 4)) < min_cap ThenElse    data2(n) = data1(i, 0)    n = n + 1End IfNext isec_list = data2End Sub
