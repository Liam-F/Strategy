Sub pair_trade_analyse(start_date As Date, end_date As Date, tick1 As String, tick2 As String, volmat1 As Integer, volmat2 As Integer, _                    mney1 As String, mney2 As String)Dim strOpenPwd As String: strOpenPwd = ";pwd=123456"Dim opt_db As DatabaseSet opt_db = OpenDatabase(Sh_PairTrade.Range("N3"), _                            Options:=True, _                            ReadOnly:=False, _                            Connect:=strOpenPwd)                            Dim dss As StringDim moneyness1 As String'If Replace(mney1, "%", "") * 100 = 100 Then'moneyness1 = "ATM"'Elsemoneyness1 = CStr(Replace(mney1, "%", "") * 100)'End IfDim moneyness2 As String'If Replace(mney2, "%", "") * 100 = 100 Then'moneyness2 = "ATM"'Elsemoneyness2 = CStr(Replace(mney2, "%", "") * 100)'End If''''' volatility analysis''''        Dim histo_vm1() As Variant        histo_vm1 = get_histo_datas(tick1, volmat1 & "M_" & moneyness1, start_date, end_date, opt_db, dss)        If dss = 1 Then    MsgBox ("Error: no data for this ticker")    Exit Sub    End If            Dim histo_vm2() As Variant        histo_vm2 = get_histo_datas(tick2, volmat2 & "M_" & moneyness2, start_date, end_date, opt_db, dss)        If dss = 1 Then    MsgBox ("Error: no data for this ticker")    Exit Sub    End If        ''''''''' price        Dim histo_px1() As Variant        histo_px1 = get_histo_datas(tick1, "PX_LAST", start_date, end_date, opt_db, dss)        If dss = 1 Then    MsgBox ("Error: no data for this ticker")    Exit Sub    End If            Dim histo_px2() As Variant        histo_px2 = get_histo_datas(tick2, "PX_LAST", start_date, end_date, opt_db, dss)        If dss = 1 Then    MsgBox ("Error: no data for this ticker")    Exit Sub    End If            '''' match date    Dim glob() As Variant        If UBound(histo_vm1, 1) = UBound(histo_vm2, 1) Then            ReDim glob(UBound(histo_vm1, 1), 4)                For i = 0 To UBound(glob, 1)        glob(i, 0) = histo_vm1(i, 0)        glob(i, 1) = histo_vm1(i, 1)        glob(i, 2) = histo_vm2(i, 1)        glob(i, 3) = histo_vm1(i, 1) - histo_vm2(i, 1)        glob(i, 4) = histo_px1(i, 1) / histo_px2(i, 1)        Next i        Else            If UBound(histo_vm1, 1) > UBound(histo_vm2, 1) Then                ReDim glob(UBound(histo_vm1, 1), 4)            For i = 0 To UBound(histo_vm1, 3)                glob(i, 0) = histo_vm1(i, 0)                    For j = 0 To UBound(histo_vm2, 1)                            If histo_vm1(i, 0) = histo_vm2(j, 0) Then                glob(i, 1) = histo_vm1(i, 1)                glob(i, 2) = histo_vm2(j, 1)                glob(i, 3) = histo_vm1(i, 1) - histo_vm2(j, 1)                glob(i, 4) = histo_px1(i, 1) / histo_px2(i, 1)                Exit For                Else                glob(i, 1) = histo_vm1(i, 1)                glob(i, 2) = ""                glob(i, 3) = ""                glob(i, 4) = ""                End If                        Next j                    Next i                Else                ReDim glob(UBound(histo_vm2, 1), 4)                For i = 0 To UBound(histo_vm2, 1)                glob(i, 0) = histo_vm2(i, 0)                    For j = 0 To UBound(histo_vm1, 1)                            If histo_vm2(i, 0) = histo_vm1(j, 0) Then                glob(i, 1) = histo_vm1(j, 1)                glob(i, 2) = histo_vm2(i, 1)                glob(i, 3) = histo_vm1(j, 1) - histo_vm2(i, 1)                glob(i, 4) = histo_px1(i, 1) / histo_px2(i, 1)                Exit For                Else                glob(i, 1) = ""                glob(i, 2) = histo_vm2(i, 1)                glob(i, 3) = ""                glob(i, 4) = ""                End If                        Next j                    Next i                End If            End If    Call disp_pt(glob)opt_db.CloseEnd SubSub disp_pt(glob As Variant)Range("B1").Select'''' VOLATILITY LEVELRange("AA:AA,AB:AB,AC:AC,AD:AD").ClearContentsRange("AA1") = "Dates"Range("AB1") = left(Range("c3"), Len(Range("c3")) - 10) & " " & Range("d3") & "M " & Range("e3") * 100 & "%"Range("AC1") = left(Range("c4"), Len(Range("c4")) - 10) & " " & Range("d4") & "M " & Range("e4") * 100 & "%"Range("AD1") = "SPREAD [" & left(Range("c3"), Len(Range("c3")) - 10) & " " & Range("d3") & "M " & Range("e3") * 100 & "%" & _                    "] - [" & left(Range("c4"), Len(Range("c4")) - 10) & " " & Range("d4") & "M " & Range("e4") * 100 & "%]"Range("AE1") = "RATIO [" & left(Range("c3"), Len(Range("c3")) - 10) & _               " PRICE] / [" & left(Range("c4"), Len(Range("c4")) - 10) & " PRICE]"Dim rngX As RangeDim rngY As RangeDim rngZ As RangeDim rngW As RangeDim rngV As RangeSet rngX = Range(Cells(2, 27), Cells(2 + UBound(glob, 1), 27)) 'current range of cells that hold array valuesSet rngY = Range(Cells(2, 28), Cells(2 + UBound(glob, 1), 28))Set rngZ = Range(Cells(2, 29), Cells(2 + UBound(glob, 1), 29))Set rngW = Range(Cells(2, 30), Cells(2 + UBound(glob, 1), 30))Set rngV = Range(Cells(2, 31), Cells(2 + UBound(glob, 1), 31))For n = 1 To UBound(glob, 1) + 1    rngX(n).Value = glob(n - 1, 0)    rngY(n).Value = glob(n - 1, 1)    rngZ(n).Value = glob(n - 1, 2)    rngW(n).Value = glob(n - 1, 3)    rngV(n).Value = glob(n - 1, 4)Next'''' mini. maxi, unit of chart 1Dim mini As Integer: mini = CInt(WorksheetFunction.Min(Range("AB:AC"))) ' - rngY(UBound(mavg), 1) * 0.2)If mini >= 100 Thenmini = (Int(mini / 100)) * 100ElseIf mini >= 50 Thenmini = (Int(mini / 10)) * 10Elsemini = Int(mini) - 1End IfDim maxi As Integer: maxi = CInt(WorksheetFunction.Max(Range("AB:AC"))) ' - rngY(UBound(mavg), 1) * 0.2)If maxi >= 100 Thenmaxi = (Int(maxi / 100) + 1) * 100ElseIf maxi >= 50 Thenmaxi = (Int(maxi / 10) + 1) * 10Elsemaxi = Int(maxi) + 1End IfDim unit As Integer: unit = (maxi - mini)If unit >= 50 Thenunit = 10ElseIf unit < 50 And unit >= 30 Thenunit = 5ElseIf unit < 30 And unit >= 10 Thenunit = 2Elseunit = 1End If'''''retur = 250If UBound(glob, 1) < retur Thenretur = UBound(glob, 1) - 2End If'''' stock1Range("E26").Value = left(Range("c3"), Len(Range("c3")) - 10)Range("E27").Value = "Last Vol " & Range("d3") & "M " & Range("e3") * 100 & "%"Dim prRange As Range: Set prRange = Range(Cells(UBound(glob, 1) - retur, 28), Cells(UBound(glob, 1) + 2, 28))Dim lst As Double: lst = Cells(UBound(glob, 1) + 2, 28)Range("F27").Value = lstRange("F28").Value = WorksheetFunction.PercentRank(prRange, lst)'''' stock2Range("H26").Value = left(Range("c4"), Len(Range("c4")) - 10)Range("H27").Value = "Last Vol " & Range("d4") & "M " & Range("e4") * 100 & "%"Set prRange = Range(Cells(UBound(glob, 1) - retur, 29), Cells(UBound(glob, 1) + 2, 29))lst = Cells(UBound(glob, 1) + 2, 29)Range("I27").Value = lstRange("I28").Value = WorksheetFunction.PercentRank(prRange, lst)'''' spread volSet prRange = Range(Cells(UBound(glob, 1) - retur, 30), Cells(UBound(glob, 1) + 2, 30))lst = Cells(UBound(glob, 1) + 2, 30)Range("F43").Value = lstRange("I43").Value = WorksheetFunction.PercentRank(prRange, lst)'''' spread pxSet prRange = Range(Cells(UBound(glob, 1) - retur, 31), Cells(UBound(glob, 1) + 2, 31))lst = Cells(UBound(glob, 1) + 2, 31)Range("F58").Value = lstRange("F59").Value = WorksheetFunction.Average(prRange)Range("F60").Value = WorksheetFunction.PercentRank(prRange, lst)'''' arrange arrayFor Each cell In Range(Cells(2, 27), Cells(2, 27).End(xlDown))    For i = 28 To 31        If Cells(cell.Row, i) = "" Then        Cells(cell.Row, i).Value = "#N/A"        End If    Next iNext cellDim ch As ChartSet ch = ActiveSheet.ChartObjects(2).Chart 'existing chart on worksheetActiveSheet.ChartObjects(2).ActivateSh_PairTrade.Calculatech.SeriesCollection(1).XValues = rngXch.SeriesCollection(1).values = rngYch.SeriesCollection(1).name = Range("AB1")ch.SeriesCollection(1).Border.ColorIndex = 21ch.SeriesCollection(1).Border.Weight = xlMediumch.SeriesCollection(2).XValues = rngXch.SeriesCollection(2).values = rngZch.SeriesCollection(2).name = Range("AC1")ch.SeriesCollection(2).Border.ColorIndex = 46ch.SeriesCollection(2).Border.Weight = xlMediumActiveSheet.ChartObjects(2).ActivateActiveChart.Axes(xlValue).SelectWith ActiveChart.Axes(xlValue)        .MinimumScale = mini        .MajorUnit = unit        .MaximumScaleIsAuto = True        .Crosses = xlAutomatic        .ReversePlotOrder = False        .ScaleType = xlLinear        .DisplayUnit = xlNoneEnd With'''' SPREAD volSet ch = ActiveSheet.ChartObjects(1).Chart 'existing chart on worksheetActiveSheet.ChartObjects(1).ActivateSh_PairTrade.Calculatech.SeriesCollection(1).XValues = rngXch.SeriesCollection(1).values = rngWch.SeriesCollection(1).name = Range("AD1")ch.SeriesCollection(1).Border.ColorIndex = 21ch.SeriesCollection(1).Border.Weight = xlMediumActiveSheet.ChartObjects(1).ActivateActiveChart.Axes(xlValue).SelectWith ActiveChart.Axes(xlValue)        .MinimumScaleIsAuto = True '' (CInt(WorksheetFunction.Min(rngW) - 1) * 100) / 100        .MaximumScaleIsAuto = True ''= (CInt(WorksheetFunction.Max(rngW) + 1) * 100) / 100        .MinorUnitIsAuto = True        .MajorUnitIsAuto = True        .Crosses = xlAutomatic        .ReversePlotOrder = False        .ScaleType = xlLinear        .DisplayUnit = xlNoneEnd With'Range("I51").Select'''' SPREAD pxSet ch = ActiveSheet.ChartObjects(3).Chart 'existing chart on worksheetActiveSheet.ChartObjects(3).ActivateSh_PairTrade.Calculatech.SeriesCollection(1).XValues = rngXch.SeriesCollection(1).values = rngVch.SeriesCollection(1).name = Range("AE1")ch.SeriesCollection(1).Border.ColorIndex = 21ch.SeriesCollection(1).Border.Weight = xlMediumActiveSheet.ChartObjects(3).ActivateActiveChart.Axes(xlValue).SelectWith ActiveChart.Axes(xlValue)'        .MinimumScaleIsAuto = True '' (CInt(WorksheetFunction.Min(rngW) - 1) * 100) / 100        .MaximumScaleIsAuto = True        If WorksheetFunction.Min(rngV) < 1 Then        .MinimumScale = (Int((WorksheetFunction.Min(rngV)) * 100)) / 100        Else        .MinimumScale = Int(WorksheetFunction.Min(rngV))        End If        .MinorUnitIsAuto = True        .MajorUnitIsAuto = True        .Crosses = xlAutomatic        .ReversePlotOrder = False        .ScaleType = xlLinear        .DisplayUnit = xlNoneEnd WithRange("I43").SelectEnd Sub
