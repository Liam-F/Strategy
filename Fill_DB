Private Declare Function URLDownloadToFile Lib "urlmon" Alias _  "URLDownloadToFileA" (ByVal pCaller As Long, ByVal szURL As String, ByVal _    szFileName As String, ByVal dwReserved As Long, ByVal lpfnCB As Long) As Long  Private session As blpapicomLib.sessionFunction check_date(sdat As Date, edat As Date, opt_db As Database) As BooleanDim rec As Recordsetstrsql = "SELECT * FROM (SELECT IV.[DATE] FROM IV GROUP BY IV.[DATE]) AS T_DATE WHERE T_DATE.[DATE] >= " & _        CDbl(sdat) & " AND T_DATE.[DATE] <= " & CDbl(edat)Set rec = opt_db.OpenRecordset(strsql)If rec.AbsolutePosition = 0 Thencheck_date = Truerec.Closeopt_db.CloseExit FunctionEnd Ifrec.Closecheck_date = FalseEnd FunctionFunction check_ticker(tickid As Integer, opt_db As Database) As Boolean'Dim rec As Recordsetstrsql = "SELECT IV.[ID] FROM IV WHERE IV.[ID] = " & tickid & " GROUP BY IV.[ID]"Set rec = opt_db.OpenRecordset(strsql)If rec.AbsolutePosition = 0 Thencheck_ticker = Truerec.Closeopt_db.CloseExit FunctionEnd If'rec.Closecheck_ticker = FalseEnd FunctionFunction get_tickerid(ticker As String, opt_db As Database) As Integertick = tickerIf Len(tick) > 7 Then    If Right(tick, 7) = " Equity" Then        tick = left(tick, Len(tick) - 7)    End IfEnd Ifstrsql = "SELECT Tickers.[ID] FROM Tickers Where Tickers.[Ticker] = '" & tick & "'"Set rec = opt_db.OpenRecordset(strsql)get_tickerid = 0If Not rec.EOF Then    get_tickerid = CInt(rec!ID)End Ifrec.CloseEnd FunctionPublic Sub Input_in_DB(ticker As String, start_date As Date, end_date As Date, session As blpapicomLib.session, _            opt_db As Database, request_typ As String, retur As String)            Dim PX_LAST As Variant'moneyness 80Dim IV_30D_80 As VariantDim IV_3M_80 As VariantDim IV_6M_80 As VariantDim IV_12M_80 As VariantDim IV_18M_80 As Variant'moneyness 90Dim IV_30D_90 As VariantDim IV_3M_90 As VariantDim IV_6M_90 As VariantDim IV_12M_90 As VariantDim IV_18M_90 As Variant'moneyness 95Dim IV_30D_95 As VariantDim IV_3M_95 As VariantDim IV_6M_95 As VariantDim IV_12M_95 As VariantDim IV_18M_95 As Variant'moneyness 100Dim IV_30D_100 As VariantDim IV_3M_100 As VariantDim IV_6M_100 As VariantDim IV_12M_100 As VariantDim IV_18M_100 As Variant'moneyness 105Dim IV_30D_105 As VariantDim IV_3M_105 As VariantDim IV_6M_105 As VariantDim IV_12M_105 As VariantDim IV_18M_105 As Variant'moneyness 110Dim IV_30D_110 As VariantDim IV_3M_110 As VariantDim IV_6M_110 As VariantDim IV_12M_110 As VariantDim IV_18M_110 As Variant'moneyness 120Dim IV_30D_120 As VariantDim IV_3M_120 As VariantDim IV_6M_120 As VariantDim IV_12M_120 As VariantDim IV_18M_120 As Variant'realized volatilityDim RV_60D As VariantDim RV_120D As VariantDim RV_260D As VariantDim MKT_CAP As VariantDim fields(0) As Variant:'PX_LAST  BBG CALLfields(0) = "PX_LAST"PX_LAST = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)''''' MKT_CAP BBG CALLfields(0) = "CUR_MKT_CAP"MKT_CAP = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)'moneyness 80 BBG CALLfields(0) = "30DAY_IMPVOL_80%MNY_DF"IV_30D_80 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "3MTH_IMPVOL_80%MNY_DF"IV_3M_80 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "6MTH_IMPVOL_80%MNY_DF"IV_6M_80 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "12MTH_IMPVOL_80%MNY_DF"IV_12M_80 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "18MTH_IMPVOL_80%MNY_DF"IV_18M_80 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)'moneyness 90 BBG CALLfields(0) = "30DAY_IMPVOL_90.0%MNY_DF"IV_30D_90 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "3MTH_IMPVOL_90.0%MNY_DF"IV_3M_90 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "6MTH_IMPVOL_90.0%MNY_DF"IV_6M_90 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "12MTH_IMPVOL_90.0%MNY_DF"IV_12M_90 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "18MTH_IMPVOL_90.0%MNY_DF"IV_18M_90 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)'moneyness 95 BBG CALLfields(0) = "30DAY_IMPVOL_95.0%MNY_DF"IV_30D_95 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "3MTH_IMPVOL_95.0%MNY_DF"IV_3M_95 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "6MTH_IMPVOL_95.0%MNY_DF"IV_6M_95 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "12MTH_IMPVOL_95.0%MNY_DF"IV_12M_95 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "18MTH_IMPVOL_95.0%MNY_DF"IV_18M_95 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)'moneyness 100 BBG CALLfields(0) = "30DAY_IMPVOL_100.0%MNY_DF"IV_30D_100 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "3MTH_IMPVOL_100.0%MNY_DF"IV_3M_100 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "6MTH_IMPVOL_100.0%MNY_DF"IV_6M_100 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "12MTH_IMPVOL_100.0%MNY_DF"IV_12M_100 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "18MTH_IMPVOL_100.0%MNY_DF"IV_18M_100 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)'moneyness 105 BBG CALLfields(0) = "30DAY_IMPVOL_105.0%MNY_DF"IV_30D_105 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "3MTH_IMPVOL_105.0%MNY_DF"IV_3M_105 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "6MTH_IMPVOL_105.0%MNY_DF"IV_6M_105 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "12MTH_IMPVOL_105.0%MNY_DF"IV_12M_105 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "18MTH_IMPVOL_105.0%MNY_DF"IV_18M_105 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)''''''moneyness 110 BBG CALLfields(0) = "30DAY_IMPVOL_110.0%MNY_DF"IV_30D_110 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "3MTH_IMPVOL_110.0%MNY_DF"IV_3M_110 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "6MTH_IMPVOL_110.0%MNY_DF"IV_6M_110 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "12MTH_IMPVOL_110.0%MNY_DF"IV_12M_110 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "18MTH_IMPVOL_110.0%MNY_DF"IV_18M_110 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)''''moneyness 120 BBG CALLfields(0) = "30DAY_IMPVOL_120%MNY_DF"IV_30D_120 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "3MTH_IMPVOL_120%MNY_DF"IV_3M_120 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "6MTH_IMPVOL_120%MNY_DF"IV_6M_120 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "12MTH_IMPVOL_120%MNY_DF"IV_12M_120 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "18MTH_IMPVOL_120%MNY_DF"IV_18M_120 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)' realized volatilityfields(0) = "VOLATILITY_60D"RV_60D = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "VOLATILITY_120D"RV_120D = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "VOLATILITY_260D"RV_260D = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)Dim big_res As Variant:big_res = Array( _            PX_LAST, MKT_CAP, _            IV_30D_80, IV_3M_80, IV_6M_80, IV_12M_80, IV_18M_80, _            IV_30D_90, IV_3M_90, IV_6M_90, IV_12M_90, IV_18M_90, _            IV_30D_95, IV_3M_95, IV_6M_95, IV_12M_95, IV_18M_95, _            IV_30D_100, IV_3M_100, IV_6M_100, IV_12M_100, IV_18M_100, _            IV_30D_105, IV_3M_105, IV_6M_105, IV_12M_105, IV_18M_105, _            IV_30D_110, IV_3M_110, IV_6M_110, IV_12M_110, IV_18M_110, _            IV_30D_120, IV_3M_120, IV_6M_120, IV_12M_120, IV_18M_120, _            RV_60D, RV_120D, RV_260D)                        ''' get ticker idDim tickerid As Integertickerid = get_tickerid(ticker, opt_db)If tickerid = 0 Then    retur = "ticker not found"    GoTo 1End IfDim max_date_nb As Integer: max_date_nb = 0ref_vec = 0'''' check and replace by -1 missing dataFor i = 0 To UBound(big_res)    If UBound(big_res(i)) > max_date_nb Then            max_date_nb = UBound(big_res(i))        ref_vec = i        End If        cunt = 0    For j = 0 To UBound(big_res(i), 1)            If big_res(i)(j, 1) = "#N/A N.A." Or big_res(i)(j, 1) = "#N/A History" Then            big_res(i)(j, 1) = -1            cunt = cunt + 1        End If        Next jNext iIf max_date_nb = 0 And cunt = UBound(big_res) Then    retur = "no data on this date"    GoTo 1End If'''' populate IV table in DBstrsql = "INSERT INTO IV ( "strsql = strsql & "[ID],[Date],[PX_LAST],[MKT_CAP],"strsql = strsql & " [30D_80],[3M_80],[6M_80],[12M_80],[18M_80],"strsql = strsql & "[30D_90],[3M_90],[6M_90],[12M_90],[18M_90],"strsql = strsql & "[30D_95],[3M_95],[6M_95],[12M_95],[18M_95],"strsql = strsql & "[30D_100],[3M_100],[6M_100],[12M_100],[18M_100],"strsql = strsql & "[30D_105],[3M_105],[6M_105],[12M_105],[18M_105],"strsql = strsql & "[30D_110],[3M_110],[6M_110],[12M_110],[18M_110],"strsql = strsql & "[30D_120],[3M_120],[6M_120],[12M_120],[18M_120],"strsql = strsql & "[RV_60D], [RV_120D] , [RV_260D] ) Values ( '"                                                             Dim newline As StringDim dat As Stringnewline = ""icount = 0For k = 0 To UBound(big_res(ref_vec), 1)    newline = ""    newline = newline & tickerid & "','"    dat = big_res(ref_vec)(k, 0)        newline = newline & CDbl(CDate(dat)) & "','"        For l = 0 To UBound(big_res)            bfound = False            For M = 0 To UBound(big_res(l), 1)                If big_res(l)(M, 0) = dat Then                    newline = newline & big_res(l)(M, 1) & "','"                    bfound = True                Exit For                End If            Next M            If bfound = False Then                newline = newline & "-1" & "','"            End If                Next l    If Len(newline) > 0 Then        If Right(newline, 2) = ",'" Then            newline = left(newline, Len(newline) - 2)        End If        newline = newline & ")"        sqlRequest = strsql & newline        opt_db.Execute sqlRequest    End If           Next k    retur = "ok"1:End SubSub input_in_db_fast(ticker As String, start_date As Date, end_date As Date, session As blpapicomLib.session, _            opt_db As Database, request_typ As String, retur As String)Dim PX_LAST As VariantDim IV_30D_90 As VariantDim IV_3M_90 As VariantDim IV_6M_90 As VariantDim IV_12M_90 As VariantDim IV_30D_100 As VariantDim IV_3M_100 As VariantDim IV_6M_100 As VariantDim IV_12M_100 As VariantDim IV_30D_110 As VariantDim IV_3M_110 As VariantDim IV_6M_110 As VariantDim IV_12M_110 As VariantDim fields(0) As Variant:'''' PX LAST BBG CALLfields(0) = "PX_LAST"PX_LAST = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)'''''' 90fields(0) = "30DAY_IMPVOL_90.0%MNY_DF"IV_30D_90 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "3MTH_IMPVOL_90.0%MNY_DF"IV_3M_90 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "6MTH_IMPVOL_90.0%MNY_DF"IV_6M_90 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "12MTH_IMPVOL_90.0%MNY_DF"IV_12M_90 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)''''''' 100fields(0) = "30DAY_IMPVOL_100.0%MNY_DF"IV_30D_100 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "3MTH_IMPVOL_100.0%MNY_DF"IV_3M_100 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "6MTH_IMPVOL_100.0%MNY_DF"IV_6M_100 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "12MTH_IMPVOL_100.0%MNY_DF"IV_12M_100 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)'''''' 110fields(0) = "30DAY_IMPVOL_110.0%MNY_DF"IV_30D_110 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "3MTH_IMPVOL_110.0%MNY_DF"IV_3M_110 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "6MTH_IMPVOL_110.0%MNY_DF"IV_6M_110 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "12MTH_IMPVOL_110.0%MNY_DF"IV_12M_110 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)''Dim big_res As Variant:big_res = Array( _                PX_LAST, _                IV_30D_90, IV_3M_90, IV_6M_90, IV_12M_90, _                IV_30D_100, IV_3M_100, IV_6M_100, IV_12M_100, _                IV_30D_110, IV_3M_110, IV_6M_110, IV_12M_110)''' get ticker idDim tickerid As Integertickerid = get_tickerid(ticker, opt_db)If tickerid = 0 Then    retur = "ticker not found"    GoTo 1End IfDim max_date_nb As Integer: max_date_nb = 0ref_vec = 0'''' check and replace by -1 missing dataFor i = 0 To UBound(big_res)    If UBound(big_res(i)) > max_date_nb Then            max_date_nb = UBound(big_res(i))        ref_vec = i        End If        cunt = 0    For j = 0 To UBound(big_res(i), 1)            If big_res(i)(j, 1) = "#N/A N.A." Or big_res(i)(j, 1) = "#N/A History" Then            big_res(i)(j, 1) = -1            cunt = cunt + 1        End If        Next jNext iIf max_date_nb = 0 And cunt = UBound(big_res) Then    retur = "no data on this date"    GoTo 1End IfDim dat As String'''' populate IV table in DBFor k = 0 To UBound(big_res(ref_vec), 1)    Dim db_line As Variant    ReDim db_line(0 To 14)    db_line(0) = tickerid        dat = big_res(ref_vec)(k, 0)    db_line(1) = CDbl(CDate(dat))            For l = 0 To UBound(big_res)                For M = 0 To UBound(big_res(l), 1)                        If big_res(l)(M, 0) = dat Then            db_line(l + 2) = big_res(l)(M, 1)            Exit For            End If                        db_line(l + 2) = -1            Next M                Next l        strsql = "SELECT * FROM IV"        Set rec = opt_db.OpenRecordset(strsql)        rec.addnew        rec!ID = db_line(0)    rec!Date = db_line(1)        rec![PX_LAST] = db_line(2)        rec![30D_90] = db_line(3)    rec![3M_90] = db_line(4)    rec![6M_90] = db_line(5)    rec![12M_90] = db_line(6)        rec![30D_100] = db_line(7)    rec![3M_100] = db_line(8)    rec![6M_100] = db_line(9)    rec![12M_100] = db_line(10)        rec![30D_110] = db_line(11)    rec![3M_110] = db_line(12)    rec![6M_110] = db_line(13)    rec![12M_110] = db_line(14)        rec.Update        rec.Close        If request_typ = "histo" Then    'Application.StatusBar = Format(CStr((k) / max_date_nb * 100), "#,##0.00") & "% Progress"    End If        retur = "ok"Next k1:End SubSub input_in_db_long(ticker As String, start_date As Date, end_date As Date, session As blpapicomLib.session, _            opt_db As Database, request_typ As String, retur As String)Dim IV_30D_80 As VariantDim IV_3M_80 As VariantDim IV_6M_80 As VariantDim IV_12M_80 As VariantDim IV_18M_80 As VariantDim IV_18M_90 As VariantDim IV_30D_95 As VariantDim IV_3M_95 As VariantDim IV_6M_95 As VariantDim IV_12M_95 As VariantDim IV_18M_95 As VariantDim IV_18M_100 As VariantDim IV_30D_105 As VariantDim IV_3M_105 As VariantDim IV_6M_105 As VariantDim IV_12M_105 As VariantDim IV_18M_105 As VariantDim IV_18M_110 As VariantDim IV_30D_120 As VariantDim IV_3M_120 As VariantDim IV_6M_120 As VariantDim IV_12M_120 As VariantDim IV_18M_120 As VariantDim RV_60D As VariantDim RV_120D As VariantDim RV_260D As VariantDim MKT_CAP As VariantDim fields(0) As Variant:'''' 80fields(0) = "30DAY_IMPVOL_80%MNY_DF"IV_30D_80 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "3MTH_IMPVOL_80%MNY_DF"IV_3M_80 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "6MTH_IMPVOL_80%MNY_DF"IV_6M_80 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "12MTH_IMPVOL_80%MNY_DF"IV_12M_80 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "18MTH_IMPVOL_80%MNY_DF"IV_18M_80 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)'''' 90fields(0) = "18MTH_IMPVOL_90.0%MNY_DF"IV_18M_90 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)'''' 95fields(0) = "30DAY_IMPVOL_95.0%MNY_DF"IV_30D_95 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "3MTH_IMPVOL_95.0%MNY_DF"IV_3M_95 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "6MTH_IMPVOL_95.0%MNY_DF"IV_6M_95 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "12MTH_IMPVOL_95.0%MNY_DF"IV_12M_95 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "18MTH_IMPVOL_95.0%MNY_DF"IV_18M_95 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)'''' 100fields(0) = "18MTH_IMPVOL_100.0%MNY_DF"IV_18M_100 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)'''' 105fields(0) = "30DAY_IMPVOL_105.0%MNY_DF"IV_30D_105 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "3MTH_IMPVOL_105.0%MNY_DF"IV_3M_105 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "6MTH_IMPVOL_105.0%MNY_DF"IV_6M_105 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "12MTH_IMPVOL_105.0%MNY_DF"IV_12M_105 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "18MTH_IMPVOL_105.0%MNY_DF"IV_18M_105 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)'''' 110fields(0) = "18MTH_IMPVOL_110.0%MNY_DF"IV_18M_110 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)'''' 120fields(0) = "30DAY_IMPVOL_120%MNY_DF"IV_30D_120 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "3MTH_IMPVOL_120%MNY_DF"IV_3M_120 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "6MTH_IMPVOL_120%MNY_DF"IV_6M_120 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "12MTH_IMPVOL_120%MNY_DF"IV_12M_120 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "18MTH_IMPVOL_120%MNY_DF"IV_18M_120 = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)'''' Realized Volfields(0) = "VOLATILITY_60D"RV_60D = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "VOLATILITY_120D"RV_120D = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)fields(0) = "VOLATILITY_260D"RV_260D = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)'''' MKT _CAPfields(0) = "CUR_MKT_CAP"MKT_CAP = M_BloomFunctions.M_GetHistoricalData(ticker, fields(), start_date, end_date, "DAILY", session)Dim big_res As Variant:big_res = Array( _            IV_30D_80, IV_3M_80, IV_6M_80, IV_12M_80, IV_18M_80, _            IV_18M_90, _            IV_30D_95, IV_3M_95, IV_6M_95, IV_12M_95, IV_18M_95, _            IV_18M_100, _            IV_30D_105, IV_3M_105, IV_6M_105, IV_12M_105, IV_18M_105, _            IV_18M_110, _            IV_30D_120, IV_3M_120, IV_6M_120, IV_12M_120, IV_18M_120, _            RV_60D, RV_120D, RV_260D, MKT_CAP)''' get ticker idDim tickerid As Integertickerid = get_tickerid(ticker, opt_db)If tickerid = 0 Thenretur = "ticker not found"GoTo 1End IfDim max_date_nb As Integer: max_date_nb = 0ref_vec = 0'''' check and replace by -1 missing dataFor i = 0 To UBound(big_res)    If UBound(big_res(i)) > max_date_nb Then            max_date_nb = UBound(big_res(i))        ref_vec = i        End If        cunt = 0    For j = 0 To UBound(big_res(i), 1)            If big_res(i)(j, 1) = "#N/A N.A." Or big_res(i)(j, 1) = "#N/A History" Then            big_res(i)(j, 1) = -1            cunt = cunt + 1        End If            Next jNext iIf max_date_nb = 0 And cunt = UBound(big_res) Then    retur = "no data on this date"    GoTo 1End IfDim dat As String'''' populate IV table in DBstrsql = " INSERT INTO IV () VALUES (Id,Date,PX_LAST"For k = 0 To UBound(big_res(ref_vec), 1)    Dim db_line As Variant    'ReDim db_line(40)    ReDim db_line(0 To 28)    db_line(0) = tickerid        dat = big_res(ref_vec)(k, 0)    db_line(1) = CDbl(CDate(dat))        For l = 0 To UBound(big_res)        For M = 0 To UBound(big_res(l), 1)                    If big_res(l)(M, 0) = dat Then                db_line(l + 2) = big_res(l)(M, 1)            Exit For            End If                        db_line(l + 2) = -1            Next M            Next l    strsql = "SELECT * FROM IV WHERE IV.ID = " & db_line(0) & " AND IV.DATE = " & db_line(1)        Set rec = opt_db.OpenRecordset(strsql)        If rec.AbsolutePosition > -1 Then            rec.Edit                rec!ID = db_line(0)        rec!Date = db_line(1)                rec![30D_80] = db_line(2)        rec![3M_80] = db_line(3)        rec![6M_80] = db_line(4)        rec![12M_80] = db_line(5)        rec![18M_80] = db_line(6)                rec![18M_90] = db_line(7)                rec![30D_95] = db_line(8)        rec![3M_95] = db_line(9)        rec![6M_95] = db_line(10)        rec![12M_95] = db_line(11)        rec![18M_95] = db_line(12)                rec![18M_100] = db_line(13)                rec![30D_105] = db_line(14)        rec![3M_105] = db_line(15)        rec![6M_105] = db_line(16)        rec![12M_105] = db_line(17)        rec![18M_105] = db_line(18)                rec![18M_110] = db_line(19)                rec![30D_120] = db_line(20)        rec![3M_120] = db_line(21)        rec![6M_120] = db_line(22)        rec![12M_120] = db_line(23)        rec![18M_120] = db_line(24)                rec![RV_60D] = db_line(25)        rec![RV_120D] = db_line(26)        rec![RV_260D] = db_line(27)                rec![MKT_CAP] = db_line(28)                rec.Update                rec.Close        End If        If request_typ = "histo" Then        Application.StatusBar = Format(CStr((k) / max_date_nb * 100), "#,##0.00") & "% Progress"    End If        retur = "ok"Next k1:End SubSub delete_date_range(start_date As Date, end_date As Date)'Dim Answer As String:Answer = MsgBox("Are you sure you want to delete those records?", vbQuestion + vbYesNo)If Answer = vbYes Then'Init DBDim strOpenPwd As String: strOpenPwd = ";pwd=123456"Dim opt_db As Database, rec As RecordsetSet opt_db = OpenDatabase(Sh_FillDB.Range("D12").Value, _                            Options:=True, _                            ReadOnly:=False, _                            Connect:=strOpenPwd)Dim strsql As String'''' IV.ID ranges between 0 and 30,000 to make a faster querystrsql = "SELECT * FROM IV WHERE IV.ID > 0 AND IV.ID < 30000 AND IV.[DATE] >= " & CDbl(start_date) & _                " AND IV.[DATE] <= " & CDbl(end_date)Set rec = opt_db.OpenRecordset(strsql)If rec.AbsolutePosition = 0 Thenrec.MoveFirstDo While Not rec.EOFrec.Deleterec.MoveNextLoopEnd Ifrec.Closeopt_db.CloseElseExit SubEnd IfEnd SubFunction get_bloom_names_sectors(v_seclist() As String) As String()Dim Temp() As VariantDim res() As StringDim v_fields() As Variant: v_fields = Array("NAME", "INDUSTRY_SECTOR", "GICS_SECTOR_NAME", "ICB_SECTOR_NAME")''' init bloomSet session = New blpapicomLib.sessionsession.Startsession.OpenService ("//blp/refdata")Temp = M_BloomFunctions.M_GetStaticData(v_seclist(), v_fields, session)ReDim res(UBound(Temp, 2))For i = 0 To UBound(Temp, 2)res(i) = Temp(0, i)Next iget_bloom_names_sectors = resEnd Function'Public Sub DB_Update_Index_ETF_compo()''    'Index'    Dim iTicker_Count As Integer''    'get the number of ticker'    iTicker_Count = Sheets("Control").Range("Universe_Index", Sheets("Control").Range("Universe_Index").End(xlDown)).Count - 1'    'clear previous calls'    Sh_FillDB.Range("FillDB_Underlyings").Offset(0, 1).Resize(1000, 2).ClearContents''    'Init DB'    Dim strOpenPwd As String: strOpenPwd = ";pwd=123456"'    Dim opt_db As Database'    Set opt_db = OpenDatabase(Range("FillDB_path").Value, _'                                Options:=True, _'                                ReadOnly:=False, _'                                Connect:=strOpenPwd)''End SubPublic Sub Update_Insert_Index_Compo()    Dim v_seclist() As String    Dim bb_Ticker As String    Dim ticker As String    'Init DB    Dim strOpenPwd As String: strOpenPwd = ";pwd=123456"    Dim opt_db As Database    Set opt_db = OpenDatabase(Range("FillDB_path").Value, _                                Options:=True, _                                ReadOnly:=False, _                                Connect:=strOpenPwd)    Application.StatusBar = "Get compos"    'clear data    Sheets("1. Fill DB").Range("Index_List").Offset(0, 0).Resize(100, 2).ClearContents    Sheets("1. Fill DB").Range("ETF_List").Offset(0, 0).Resize(100, 2).ClearContents        'get all Index names and ETF NAMES    iIndexNumber = Sheets("Control").Range("Universe_Index", Sheets("Control").Range("Universe_Index").End(xlDown)).Count - 1    iETFNumber = Sheets("Control").Range("Universe_ETF", Sheets("Control").Range("Universe_ETF").End(xlDown)).Count - 1        Sheets("1. Fill DB").Range("Index_List").Resize(iIndexNumber, 1).Value = Sheets("Control").Range("Universe_Index").Offset(1, 0).Resize(iIndexNumber, 1).Value    Sheets("1. Fill DB").Range("ETF_List").Resize(iETFNumber, 1).Value = Sheets("Control").Range("Universe_ETF").Offset(1, 0).Resize(iETFNumber, 1).Value        Dim v_Index_List() As String        Dim vETF_List() As String        For i = 0 To iIndexNumber - 1        ReDim v_Index_List(0)                '""" get ticker id """        bb_Ticker = Sheets("1. Fill DB").Range("Index_List").Offset(i, 0).Value        v_Index_List(0) = bb_Ticker        UnderlyingID = get_tickerid(bb_Ticker, opt_db)        If UnderlyingID = 0 Then            strsql = "INSERT INTO Tickers ([Ticker],[Ref],[Bloom],[Type],[Name],[GICS_Sector],[ICB_Sector],[INDUSTRY_Sector],[Ref2])" _            & "VALUES ('" & bb_Ticker & "','" & "" & "','" & bb_Ticker & " Index" & "','" & "" & "','" & "" & "','" & "" & "','" & "" & "','" & "" & "','" & "" & "')"            opt_db.Execute strsql            UnderlyingID = get_tickerid(bb_Ticker, opt_db)        End If                'get components        v_Index_List(0) = v_Index_List(0) & " Index"        Call get_index_members(v_Index_List())                ' delete existing backet in database        strsql = "DELETE FROM Compos WHERE Compos.[UnderlyingID] = '" & UnderlyingID & "'"        opt_db.Execute strsql        Application.StatusBar = "Insert in Database"        ' insert in database        For k = 0 To UBound(v_Index_List) - 1            ticker = v_Index_List(k)            AssetID = get_tickerid(ticker, opt_db)                        If AssetID = 0 Then                ReDim v_seclist(0)                v_seclist(0) = ticker & " Equity"                vect = get_bloom_names_sectors(v_seclist)                                If vect(2) = "Information Technology" Then                    vect(2) = "Technology"                ElseIf vect(2) = "Telecommunication Services" Then                    vect(2) = "Technology"                End If                vect(0) = Replace(vect(0), "'", "")                strsql = "INSERT INTO Tickers ([Ticker],[Ref],[Bloom],[Type],[Name],[GICS_Sector],[ICB_Sector],[INDUSTRY_Sector],[Ref2])" _                & " VALUES ('" & ticker & "','" & "" & "','" & ticker & " Equity" & "','" & "" & "','" & vect(0) & "','" & vect(1) & "','" & vect(2) & "','" & vect(3) & "','" & "" & "')"                opt_db.Execute strsql                AssetID = get_tickerid(ticker, opt_db)            End If            strsql = "INSERT INTO Compos ([UnderlyingID],[AssetID],[Shares],[Weight],[Spot])" _            & "VALUES ('" & CStr(UnderlyingID) & "','" & CStr(AssetID) & "','' ,'' ,'' )"            opt_db.Execute strsql        Next k        Sheets("1. Fill DB").Range("Index_List").Offset(i, 1).Value = "updated"    Next i    '    For i = 0 To iETFNumber - 1'        ReDim v_Index_List(0)''        '""" get ticker id """'        bb_Ticker = Sheets("1. Fill DB").Range("ETF_List").Offset(i, 0).Value'        v_Index_List(0) = bb_Ticker'        UnderlyingID = get_tickerid(bb_Ticker, opt_db)'        If UnderlyingID = 0 Then'            strsql = "INSERT INTO Tickers ([Ticker],[Ref],[Bloom],[Type],[Name],[GICS_Sector],[ICB_Sector],[INDUSTRY_Sector],[Ref2])" _'            & "VALUES ('" & bb_Ticker & "','" & "" & "','" & bb_Ticker & " Index" & "','" & "" & "','" & "" & "','" & "" & "','" & "" & "','" & "" & "','" & "" & "')"'            opt_db.Execute strsql'            UnderlyingID = get_tickerid(bb_Ticker, opt_db)'        End If''        'get components'        v_Index_List(0) = v_Index_List(0) & " Equity"'        Call get_index_members(v_Index_List())''        ' delete existing backet in database'        strsql = "DELETE FROM Compos WHERE Compos.[UnderlyingID] = '" & UnderlyingID & "'"'        opt_db.Execute strsql''        ' insert in database    '        For k = 0 To UBound(v_Index_List) - 1'            ticker = v_Index_List(k)'            Assetid = get_tickerid(ticker, opt_db)''            If Assetid = 0 Then'                ReDim v_seclist(0)'                v_seclist(0) = ticker & " Equity"'                vect = get_bloom_names_sectors(v_seclist)''                If vect(2) = "Information Technology" Then'                    vect(2) = "Technology"'                ElseIf vect(2) = "Telecommunication Services" Then'                    vect(2) = "Technology"'                End If'                vect(0) = Replace(vect(0), "'", "")'                strsql = "INSERT INTO Tickers ([Ticker],[Ref],[Bloom],[Type],[Name],[GICS_Sector],[ICB_Sector],[INDUSTRY_Sector],[Ref2])" _'                & "VALUES ('" & ticker & "','" & "" & "','" & ticker & " Equity" & "','" & "" & "','" & vect(0) & "','" & vect(1) & "','" & vect(2) & "','" & vect(3) & "','" & "" & "')"'                opt_db.Execute strsql'                Assetid = get_tickerid(ticker, opt_db)'            End If'            strsql = "INSERT INTO Compos ([UnderlyingID],[AssetID],[Shares],[Weight],[Spot])" _'            & "VALUES ('" & CStr(UnderlyingID) & "','" & CStr(Assetid) & "','' ,'' ,'' )"'            opt_db.Execute strsql'''        Next k'        Sheets("1. Fill DB").Range("ETF_List").Offset(i, 1).Value = "updated"'    Next i                           Application.StatusBar = FalseEnd SubPublic Sub DB_Add_Historical_Data()    Dim tickerid As Integer, s_Ref As String, bb_Ticker As String, s_ticker As String, s_Type As String    Dim vect() As String, v_seclist() As String, i As Integer        'get the number of ticker    If Sh_FillDB.Range("B4") <> "" Then        iTicker_Count = Sh_FillDB.Range("FillDB_Underlyings", Sh_FillDB.Range("FillDB_Underlyings").End(xlDown)).Count    Else        iTicker_Count = 1    End If    'clear previous calls    Sh_FillDB.Range("FillDB_Underlyings").Offset(0, 1).Resize(1000, 2).ClearContents        Application.StatusBar = "Update/Insert Tickers"        'Init DB    Dim strOpenPwd As String: strOpenPwd = ";pwd=123456"    Dim opt_db As Database    Set opt_db = OpenDatabase(Range("FillDB_path").Value, _                                Options:=True, _                                ReadOnly:=False, _                                Connect:=strOpenPwd)                                   'Ticker Update // Insertion    For i = 0 To iTicker_Count - 1        bb_Ticker = Sh_FillDB.Range("FillDB_Underlyings").Offset(i, 0).Value        s_Ref = ""        s_Type = ""                tickerid = get_tickerid(bb_Ticker, opt_db)                ticker = Sh_FillDB.Range("FillDB_Underlyings").Offset(i, 0).Value        If Len(ticker) > 7 Then            If Right(ticker, 7) = " Equity" Then                ticker = left(ticker, Len(ticker) - 7)            End If        End If        If tickerid = 0 Then            ReDim v_seclist(0)            v_seclist(0) = Sh_FillDB.Range("FillDB_Underlyings").Offset(i, 0).Value            vect = get_bloom_names_sectors(v_seclist)                        If vect(2) = "Information Technology" Then                vect(2) = "Technology"            ElseIf vect(2) = "Telecommunication Services" Then                vect(2) = "Technology"            End If            vect(0) = Replace(vect(0), "'", "")            strsql = "INSERT INTO Tickers ([Ticker],[Ref],[Bloom],[Type],[Name],[GICS_Sector],[ICB_Sector],[INDUSTRY_Sector],[Ref2])" _            & " VALUES ('" & ticker & "','" & "" & "','" & ticker & " Equity" & "','" & "" & "','" & vect(0) & "','" & vect(1) & "','" & vect(2) & "','" & vect(3) & "','" & "" & "')"            opt_db.Execute strsql            AssetID = get_tickerid(bb_Ticker, opt_db)           End If                Sh_FillDB.Range("FillDB_Underlyings").Offset(i, 1).Value = "ok"    Next i    Application.StatusBar = "Ready"            'DELETE EXISTING DATA    Dim sd As Date    Dim ed As Date    sd = Range("FillDB_StartDB").Value    ed = Range("FillDB_EndDB").Value        Application.StatusBar = "Deleting Existing Data"             For i = 0 To iTicker_Count - 1        bb_Ticker = Sh_FillDB.Range("FillDB_Underlyings").Offset(i, 0).Value                Ticker_id = get_tickerid(bb_Ticker, opt_db)                '''' IV.ID ranges between 0 and 30,000 to make a faster query        strsql = "DELETE * FROM IV WHERE (IV.ID =  " & Ticker_id & " AND IV.[DATE] >= " & CDbl(sd) & _                    " AND IV.[DATE] <= " & CDbl(ed) & ");"        opt_db.Execute strsql    Next i'        If rec.AbsolutePosition = 0 Then'            rec.MoveFirst'        Do While Not rec.EOF'        rec.Delete'        rec.MoveNext'        Loop'        End If                                        ' INSERT HSTY IN DATABASE    daily = False    histo = True    more = True    allTickers = True                 ''''        Dim retur As String        ''' Init bloom    Set session = New blpapicomLib.session    session.Start    session.OpenService ("//blp/refdata")    For i = 0 To iTicker_Count - 1        bb_Ticker = Sh_FillDB.Range("FillDB_Underlyings").Offset(i, 0).Value        If Len(bb_Ticker) > 7 Then            If Not Right(bb_Ticker, 7) = " Equity" Then                bb_Ticker = bb_Ticker & " Equity"            End If        Else            bb_Ticker = bb_Ticker & " Equity"        End If        Call Input_in_DB(bb_Ticker, sd, ed, session, opt_db, "histo", retur)        'Call input_in_db_fast(bb_Ticker, sd, ed, session, opt_db, "histo", retur)        'Call input_in_db_long(CStr(bb_Ticker), sd, ed, session, opt_db, "daily", retur)                    Application.StatusBar = Format(CStr((i + 1) / (CDbl(iTicker_Count)) _            * 100), "#,##0.00") & "% Progress"                Sh_FillDB.Range("FillDB_Underlyings").Offset(i, 2).Value = retur                Next i              Application.StatusBar = "Ready"        opt_db.CloseEnd SubPublic Sub Update_Tickers()    Dim tickerid As Integer, s_Ref As String, bb_Ticker As String, s_ticker As String, s_Type As String    Dim vect() As String, v_seclist() As String, i As Integer        iTicker_Count = Sh_FillDB.Range("FillDB_path", Sh_FillDB.Range("FillDB_Underlyings").End(xlDown)).Count        Application.StatusBar = "Update/Insert Tickers"        'Init DB    Dim strOpenPwd As String: strOpenPwd = ";pwd=123456"    Dim opt_db As Database    Set opt_db = OpenDatabase(Range("FillDB_path").Value, _                                Options:=True, _                                ReadOnly:=False, _                                Connect:=strOpenPwd)                                    For i = 0 To iTicker_Count - 1        bb_Ticker = Sh_FillDB.Range("FillDB_Underlyings").Offset(i, 0).Value        s_Ref = ""        s_Type = ""        tickerid = get_tickerid(bb_Ticker, opt_db)        ReDim v_seclist(0)        v_seclist(0) = bb_Ticker        vect = get_bloom_names_sectors(v_seclist)                If vect(2) = "Information Technology" Then            vect(2) = "Technology"        ElseIf vect(2) = "Telecommunication Services" Then            vect(2) = "Technology"        End If                If LCase(Right(bb_Ticker, 6)) = "equity" Then            s_ticker = left(bb_Ticker, (Len(bb_Ticker) - 10))        Else            s_ticker = left(bb_Ticker, (Len(bb_Ticker) - 6))        End If                    If tickerid = 0 Then                            strsql = "SELECT * FROM Tickers"                        Set rec = opt_db.OpenRecordset(strsql)                        rec.addnew            rec!ticker = s_ticker            rec!Ref = s_Ref            rec!Type = s_Type            rec!name = vect(0)            rec!GICS_Sector = vect(1)            rec!ICB_Sector = vect(2)            rec!INDUSTRY_Sector = vect(3)            rec.Update            rec.Close                        Else                            strsql = "SELECT * FROM Tickers WHERE (Tickers.Id = " & tickerid & ")"                        Set rec = opt_db.OpenRecordset(strsql)                    rec.Edit            rec!Ref = s_Ref            rec!Type = s_Type            rec!name = vect(0)            rec!GICS_Sector = vect(1)            rec!ICB_Sector = vect(2)            rec!INDUSTRY_Sector = vect(3)            rec.Update            rec.Close                        End If                        Sh_FillDB.Range("FillDB_Underlyings").Offset(i, 1).Value = "ok"    Next iApplication.StatusBar = "Ready"Dim tickerid As Integer, s_Ref As String, bb_Ticker As String, s_ticker As String, s_Type As StringDim vect() As String, v_seclist() As String, i As IntegerSh_FillDB.ActivateRange("k9:k500").ClearContentsInit DbDim strOpenPwd As String: strOpenPwd = ";pwd=123456"Dim opt_db As DatabaseSet opt_db = OpenDatabase(Range("D12").Value, _                            Options:=True, _                            ReadOnly:=False, _                            Connect:=strOpenPwd)i = 1Do While Cells(8, 8).Offset(i, 0) <> ""        bb_Ticker = Cells(8, 8).Offset(i, 0).Value    s_Ref = Cells(8, 8).Offset(i, 1).Value    s_Type = Cells(8, 8).Offset(i, 2).Value        tickerid = get_tickerid(bb_Ticker, opt_db)        ReDim v_seclist(0)    v_seclist(0) = bb_Ticker    vect = get_bloom_names_sectors(v_seclist)        If vect(2) = "Information Technology" Then        vect(2) = "Technology"    ElseIf vect(2) = "Telecommunication Services" Then        vect(2) = "Technology"    End If        If LCase(Right(bb_Ticker, 6)) = "equity" Then        s_ticker = left(bb_Ticker, (Len(bb_Ticker) - 10))    Else        s_ticker = left(bb_Ticker, (Len(bb_Ticker) - 6))    End If        If tickerid = 0 Then                    strsql = "SELECT * FROM Tickers"                Set rec = opt_db.OpenRecordset(strsql)                rec.addnew        rec!ticker = s_ticker        rec!Ref = s_Ref        rec!Type = s_Type        rec!name = vect(0)        rec!GICS_Sector = vect(1)        rec!ICB_Sector = vect(2)        rec!INDUSTRY_Sector = vect(3)        rec.Update        rec.Close                Else                    strsql = "SELECT * FROM Tickers WHERE (Tickers.Id = " & tickerid & ")"                Set rec = opt_db.OpenRecordset(strsql)            rec.Edit        rec!Ref = s_Ref        rec!Type = s_Type        rec!name = vect(0)        rec!GICS_Sector = vect(1)        rec!ICB_Sector = vect(2)        rec!INDUSTRY_Sector = vect(3)        rec.Update        rec.Close                End If            Cells(8, 8).Offset(i, 3) = "ok"    Application.StatusBar = i    i = i + 1    LoopApplication.StatusBar = "Ready"End SubPublic Sub Store_SPDRs_File()    Dim strSavePath As String    Dim URL As String, ext As String    Dim buf, ret As Long    Dim dDate As Date, sDD As String, sMM As String, sYYYY As String        Sheets("control").Range("today").Calculate    dDate = Sheets("control").Range("today")    If Day(dDate) < 10 Then        sDD = "0" & Day(dDate)    Else        sDD = Day(dDate)    End If    If Month(dDate) < 10 Then        sMM = "0" & Month(dDate)    Else        sMM = Month(dDate)    End If    sYYYY = Year(dDate)    URL = Range("URL1_Path").Value    buf = Split(URL, ".")    ext = buf(UBound(buf))    strSavePath = Sheets("control").Range("ETFs_path").Value & "\SPDRs files\" & "ETF_broker_basket " & sMM & sDD & sYYYY & "." & ext    ret = URLDownloadToFile(0, URL, strSavePath, 0, 0)    If ret = 0 Then        MsgBox "Download has been successful!"    Else        MsgBox "Error in download!"    End IfEnd SubPublic Sub Open_SPDRs()Dim dDate As Date, sDD As String, sMM As String, sYYYY As StringdDate = Sh_FillDB.Range("M9").ValueIf Day(dDate) < 10 Then    sDD = "0" & Day(dDate)Else    sDD = Day(dDate)End IfIf Month(dDate) < 10 Then    sMM = "0" & Month(dDate)Else    sMM = Month(dDate)End IfsYYYY = Year(dDate)Workbooks.Open Filename:= _    Sheets("control").Range("ETFs_path").Value & "\SPDRs files\" & "ETF_broker_basket " & sMM & sDD & sYYYY & ".csv"End SubPublic Sub Load_Index_Compo()Dim sTicker As StringDim i As Integer'Init DBDim strOpenPwd As String: strOpenPwd = ";pwd=123456"Dim opt_db As DatabaseSet opt_db = OpenDatabase(Sh_Control.Range("DB_Path").Value, _                            Options:=True, _                            ReadOnly:=False, _                            Connect:=strOpenPwd)i = 1Do While Range("universe_index").Offset(i, 0) <> ""    sTicker = Range("universe_index").Offset(i, 0)'    Call DB_DeleteCompo(sTicker, Opt_DB)'    Call DB_DeleteDivisor(sTicker, Opt_DB)    Call DB_MDS_AddIndexCompo(sTicker, opt_db)    i = i + 1Loopopt_db.CloseMsgBox "Done"End SubPublic Sub DB_DeleteCompo(sTicker As String, opt_db As Database)strsql = "DELETE * FROM Compos WHERE (Compos.Index = '" & sTicker & "');"opt_db.Execute strsqlEnd SubPublic Sub DB_DeleteDivisor(sTicker As String, opt_db As Database)strsql = "DELETE * FROM Divisors WHERE (Divisors.Index = '" & sTicker & "');"opt_db.Execute strsqlEnd SubPublic Sub DB_MDS_AddIndexCompo(sTicker As String, opt_db As Database)Dim rec As RecordsetDim i As Integer, vll_line As Integer, j As IntegerDim dDate As Date, dDivisor As DoubleDim MDS_path As StringDim sWorkbook As StringDim v_temp() As Variant, s_list As String, iNb As IntegerDim s_check As StringDim v_seclist() As StringApplication.DisplayAlerts = FalseApplication.ScreenUpdating = FalseApplication.Calculation = xlManualRange("today").CalculatedDate = Range("today")'sWorkbook = ActiveWorkbook.Name'Workbooks.Add'ChDir "S:\optprice\Equity Derivs\Trading"'ActiveWorkbook.SaveAs Filename:= _'    "S:\optprice\Equity Derivs\Trading\TempBook.xls", FileFormat:= _'    xlNormal, Password:="", WriteResPassword:="", ReadOnlyRecommended:=False _'    , CreateBackup:=False'''' get members of indicesReDim v_seclist(0)v_seclist(0) = sTicker & " Index"Call get_index_compo(v_seclist())'    Nb_lines = ExtractComposition(sTicker & " Index", "INDX_MWEIGHT_PX", 1, 1)'    dDivisor = ExtractSpotPrice(sTicker & " Index", "INDX_DIVISOR")s_list = "("i = 1Do While Cells(i, 1) <> ""    If i = 1 Then        s_list = s_list & "'" & left(Cells(i, 1), Len(Cells(i, 1)) - 3) & "'"    Else        s_list = s_list & ",'" & left(Cells(i, 1), Len(Cells(i, 1)) - 3) & "'"    End If    i = i + 1Loops_list = s_list & ")"strsql = "SELECT Tickers.Ticker, Tickers.Id FROM Tickers WHERE Tickers.Ticker In " & s_list & " ORDER by Tickers.Ticker ASC;"Set rec = opt_db.OpenRecordset(strsql)iNb = rec.RecordCountv_temp = rec.GetRows(iNb)i = 1Do While Cells(i, 1) <> ""    For j = 0 To iNb - 1        If left(Trim(Cells(i, 1)), Len(Trim(Cells(i, 1))) - 3) = v_temp(0, j) Then            Exit For        End If    Next j    If j = iNb And left(Trim(Cells(i, 1)), Len(Trim(Cells(i, 1))) - 3) <> v_temp(0, iNb - 1) Then        If s_check = "" Then            s_check = Cells(i, 1) & " Equity"        Else            s_check = s_check & ", " & Cells(i, 1) & " Equity"        End If    End If    i = i + 1LoopIf s_check <> "" Then    Workbooks("TempBook.xls").Save    Windows("TempBook.xls").Close    Kill ("S:\optprice\Equity Derivs\Trading\TempBook.xls")    MsgBox "Update Tickers table with: " & s_check    Exit SubEnd Ifstrsql = "SELECT * FROM Compos"Set rec = opt_db.OpenRecordset(strsql)i = 1Do While Cells(i, 1) <> ""    rec.addnew    rec!index = sTicker'    rec!Stock = Left(Trim(Cells(i, 1)), Len(Trim(Cells(i, 1))) - 3)    If left(Trim(Cells(i, 1)), Len(Trim(Cells(i, 1))) - 3) = v_temp(0, i - 1) Then        rec!ID = v_temp(1, i - 1)    Else        MsgBox "there is a Pb!!!"        Exit Sub    End If    rec!Shares = Cells(i, 3)    rec!Weight = Cells(i, 2)    rec!Spot = Cells(i, 4)    rec!Date = CDbl(dDate)    rec.Update    i = i + 1Looprec.Closestrsql = "SELECT * FROM Divisors"Set rec = opt_db.OpenRecordset(strsql)rec.addnewrec!index = sTickerrec!Divisor = dDivisorrec!Date = CDbl(dDate)rec.Updaterec.Closei = 1Workbooks(sWorkbook).ActivateMDS_path = Range("MDS_path").ValueWorkbooks("TempBook.xls").ActivateIf Day(dDate) < 10 Then    sDD = "0" & Day(dDate)Else    sDD = Day(dDate)End IfIf Month(dDate) < 10 Then    sMM = "0" & Month(dDate)Else    sMM = Month(dDate)End IfsYYYY = Year(dDate)Set vlo_FileSystem = CreateObject("Scripting.FileSystemObject")Set vlo_File = vlo_FileSystem.CreateTextFile(MDS_path & "\Compos\" & sTicker & "_compo_" & sMM & sDD & sYYYY & ".txt", True)vlo_File.WriteLine ("|" & sTicker & "|" & dDivisor & "|")vlo_File.WriteLine ("----")vll_line = 1While Cells(vll_line, 1) <> ""        vls_string = "|" & left(Range("A" & vll_line & "").Value, Len(Range("A" & vll_line & "").Value) - 3) & "|" & Range("C" & vll_line & "").Value & "|" & Range("B" & vll_line & "").Value & "|" & Range("D" & vll_line & "").Value & "|"        vlo_File.WriteLine (vls_string)        vll_line = vll_line + 1    Wendvlo_File.WriteLine ("----")vlo_File.Close    Workbooks("TempBook.xls").SaveWindows("TempBook.xls").CloseKill ("S:\optprice\Equity Derivs\Trading\TempBook.xls")Application.DisplayAlerts = TrueApplication.ScreenUpdating = TrueEnd SubFunction get_index_compo(v_seclist() As String)Dim results As VariantDim temp_results As VariantDim m_rslt() As StringReDim m_rslt(0)Dim v_fields() As Variant: v_fields = Array("INDX_MWEIGHT_PX")''' init bloom Set session = New blpapicomLib.session session.Start session.OpenService ("//blp/refdata")For i = 0 To UBound(v_seclist)results = M_BloomFunctions.M_GetBulkData(v_seclist(i), v_fields(), session)    temp_results = results    If UBound(temp_results) > 0 Then            If UBound(m_rslt) > 0 Then            last_line = UBound(m_rslt) + 1            Else            last_line = 0        End If            ReDim Preserve m_rslt(last_line + UBound(temp_results, 1))                n = 0                For j = last_line To UBound(m_rslt)            m_rslt(j) = CStr(temp_results(n))            n = n + 1        Next j        Else            Dim ticker As String                If m_rslt(0) = "" Then                        ticker = left(v_seclist(i), Len(v_seclist(i)) - 7)            m_rslt(UBound(m_rslt)) = ticker        Else        ReDim Preserve m_rslt(UBound(m_rslt) + 1)        ticker = left(v_seclist(i), Len(v_seclist(i)) - 7)        m_rslt(UBound(m_rslt)) = CStr(ticker)        End If    End If    Next iCall delete_double(m_rslt()) v_seclist = m_rsltEnd Function
