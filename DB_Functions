Private session As blpapicomLib.sessionPublic Sub Get_Compo()    Dim ticker As String    Dim component_id() As Integer    ticker = Sheets("1. Fill DB").Range("Fill_DB_Index").Value    Dim components_ticker() As String    'Init DB    Dim strOpenPwd As String: strOpenPwd = ";pwd=123456"    Dim opt_db As Database    Set opt_db = OpenDatabase(Range("FillDB_path").Value, _                                Options:=True, _                                ReadOnly:=False, _                                Connect:=strOpenPwd)    'TickerID    tickerid = get_tickerid(ticker, opt_db)        'Get the Basket     strsql = "SELECT Compos.AssetID from Compos WHERE Compos.UnderlyingID ='" & tickerid & "'"     Set rec = opt_db.OpenRecordset(strsql)     test = 0     icount = 0     Do While Not rec.EOF        icount = icount + 1        rec.MoveNext     Loop     rec.MoveFirst     ReDim component_id(icount) As Integer     icount = 0     Do While Not rec.EOF        icount = icount + 1        component_id(icount) = rec![AssetID]        rec.MoveNext     Loop          rec.Close          ReDim components_ticker(icount) As String          For i = 0 To UBound(component_id) - 1        tickerid = component_id(i)        ticker = ""        strsql = "SELECT Tickers.Ticker from Tickers WHERE Tickers.ID =" & CInt(tickerid) & ""        Set rec = opt_db.OpenRecordset(strsql)        If Not rec.EOF Then            ticker = rec![ticker]        End If        components_ticker(i) = ticker     Next i            icount = 0    Sheets("1. Fill DB").Range("FillDB_Underlyings").Resize(1000, 3).ClearContents    For i = 0 To UBound(components_ticker) - 1        If components_ticker(i) <> "" Then            Sheets("1. Fill DB").Range("FillDB_Underlyings").Offset(icount, 0).Value = components_ticker(i) & " Equity"            icount = icount + 1        End If    Next iEnd SubSub get_top_members(index As String, nb_top As Integer)Range("B3:C1000").ClearContentsDim results() As StringDim small_index As String: small_index = left(index, Len(index) - 6)Dim str_sql As String:str_sql = "SELECT TOP " & nb_top & " STOCK FROM COMPOS WHERE INDEX = '" & small_index & _          "' ORDER BY COMPOS.WEIGHT DESC"'Init DBDim strOpenPwd As String: strOpenPwd = ";pwd=123456"Dim opt_db As DatabaseSet opt_db = OpenDatabase(Sh_InputVol.Range("E14").Value, _                            Options:=True, _                            ReadOnly:=False, _                            Connect:=strOpenPwd)Dim rec As RecordsetSet rec = opt_db.OpenRecordset(str_sql)'''' get size of the arraym_size = 0Do While Not rec.EOFIf rec.fields(0).Value <> -1 Thenm_size = m_size + 1End Ifrec.MoveNextLoopIf m_size = 0 ThenExit SubElseReDim results(m_size - 1)'''' populate the arraym_line = 0rec.MoveFirstDo While Not rec.EOFIf rec.fields(0).Value <> -1 Thenresults(m_line) = CStr(rec.fields(0).Value)m_line = m_line + 1End Ifrec.MoveNextLooprec.Close'''' match with bloom tickerDim v_index() As StringReDim v_index(0): v_index(0) = indexCall Check_Members.get_index_members(v_index())For i = 0 To UBound(results)    For j = 0 To UBound(v_index)    If results(i) = left(v_index(j), Len(v_index(j)) - 3) Then    results(i) = v_index(j) & " Equity"    Exit For    End If    Next j    Next i    End IfDim names() As StringReDim names(UBound(results)) As Stringnames = get_bloom_names(results)With Sh_InputVol        .Activate    .Range(Cells(3, 2), Cells(3, 2).End(xlDown)).ClearContents    .Range(Cells(3, 2), Cells(3 + UBound(results), 2)).Value = Application.Transpose(results())    .Range(Cells(3, 3), Cells(3 + UBound(results), 3)).Value = Application.Transpose(names())End Withopt_db.CloseEnd SubFunction get_bloom_names(v_seclist() As String) As String()Dim Temp() As VariantDim res() As StringDim v_fields() As Variant: v_fields = Array("NAME")''' init bloomSet session = New blpapicomLib.sessionsession.Startsession.OpenService ("//blp/refdata")Temp = M_BloomFunctions.M_GetStaticData(v_seclist(), v_fields, session)ReDim res(UBound(Temp))For i = 0 To UBound(Temp)res(i) = Temp(i, 0)Next iget_bloom_names = resEnd FunctionSub check_tickerlist(opt_db As Database)Dim v_id() As VariantDim v_tick() As Variant'n = 0'''''' get ticker id for the ticker range'For Each cell In Range(Cells(3, 2), Cells(3, 2).End(xlDown))''Dim small_tick As String: small_tick = Left(cell, Len(cell) - 7)''strsql = "SELECT tickers.id from tickers where tickers.ref = '" & small_tick & "'"''Set rec = opt_db.OpenRecordset(strsql)''If Not rec.EOF Then rec.MoveFirst''ReDim Preserve v_id(n)'v_id(n) = rec.Fields(0).Value''ReDim Preserve v_tick(n)'v_tick(n) = small_tick'n = n + 1''Next cell''rec.Close''Dim check As String: check = ""'''''' check if the ticker id has been already filled in the DB'For i = 0 To UBound(v_id)''strsql = "SELECT iv.id from iv where iv.id = " & v_id(i)''Set rec = opt_db.OpenRecordset(strsql)''If rec.AbsolutePosition = -1 Then'If check = "" Then'check = v_tick(i)'Else'check = check & ", " & v_tick(i)'End If'End If''Next i''rec.Close'''''' if some ticker are missing'If check <> "" Then'MsgBox ("Please fill in DB with: " & check)'End If'Dim vect As Variant, iNb As IntegerDim lDate As Long, i As Integer, j As IntegerDim s_check As String, s_ticker As StringSh_InputVol.Activatestrsql = "SELECT IV.Date from IV, Tickers WHERE (Tickers.Id = IV.Id AND Tickers.Ticker = 'GE') ORDER by IV.Date DESC;"Set rec = opt_db.OpenRecordset(strsql)iNb = rec.RecordCountvect = rec.GetRows(iNb)lDate = vect(0, 0)rec.Closestrsql = "SELECT Tickers.Ticker from Tickers, IV WHERE (Tickers.Id = IV.Id AND IV.Date = " & lDate & ") ORDER by Tickers.Ticker ASC;"Set rec = opt_db.OpenRecordset(strsql)iNb = rec.RecordCountvect = rec.GetRows(iNb)rec.Closei = 1Do While Range("b2").Offset(i, 0) <> ""    If LCase(Right(Range("b2").Offset(i, 0), 6)) = "equity" Then        sTicker = left(Range("b2").Offset(i, 0), (Len(Range("b2").Offset(i, 0)) - 10))    Else        sTicker = left(Range("b2").Offset(i, 0), (Len(Range("b2").Offset(i, 0)) - 6))    End If    j = 0    Do While sTicker <> vect(0, j) And j < iNb - 1        j = j + 1    Loop    If j = iNb - 1 Then    j = j    End If    If j = iNb - 1 And sTicker <> vect(0, iNb - 1) Then        If s_check = "" Then            s_check = Range("b2").Offset(i, 0)        Else            s_check = s_check & ", " & Range("b2").Offset(i, 0)        End If    End If    i = i + 1Loop'''' if some ticker are missingIf s_check <> "" Then    MsgBox "Please fill in DB with: " & s_checkEnd IfEnd SubFunction get_histo_datas(ticker As String, field As String, start_date As Date, end_date As Date, _            opt_db As Database, alert As String) As Variant()alert = 0Dim results() As VariantDim m_ticker As StringIf Len(ticker) > 7 Then    If Right(ticker, 7) = " Equity" Then        m_ticker = left(ticker, Len(ticker) - 7)    Else        m_ticker = ticker    End IfElse    m_ticker = tickerEnd IfDim rec As Recordset'''' get tickeridDim str_sql As String: str_sql = "SELECT [Tickers.ID] from Tickers where [Tickers.Ticker] = '" & m_ticker & "'"Set rec = opt_db.OpenRecordset(str_sql)If rec.AbsolutePosition = -1 Thenalert = 1'Exit Function    ReDim results(0, 0) As Variant    get_histo_datas = resultsElserec.MoveFirstDim tickerid As Integer: tickerid = rec![Tickers.ID]rec.Close'''' get datasDim sd As Double: sd = CDbl(start_date)Dim ed As Double: ed = CDbl(end_date)str_sql = "SELECT [IV.DATE], [IV." & field & "] FROM IV WHERE [IV.ID] = " & tickerid & _        " AND [IV.DATE] >= " & sd & " AND [IV.DATE] <= " & ed & " ORDER BY [IV.DATE] ASC"Set rec = opt_db.OpenRecordset(str_sql)'''' get size of the arraym_size = 0Do While Not rec.EOFIf rec.fields(1).Value <> -1 Thenm_size = m_size + 1End Ifrec.MoveNextLoopIf m_size = 0 Thenalert = 1'Exit Function    ReDim results(0, 0) As Variant    get_histo_datas = resultsElseReDim results(m_size - 1, 1) As Variant'''' populate the arraym_line = 0rec.MoveFirstDo While Not rec.EOFIf rec.fields(1).Value <> -1 Thenresults(m_line, 0) = CDate(rec.fields(0).Value)results(m_line, 1) = rec.fields(1).Valuem_line = m_line + 1End Ifrec.MoveNextLooprec.Closeget_histo_datas = resultsEnd IfEnd IfEnd FunctionFunction get_name_db(small_tick As String, opt_db As Database) As StringDim rec As RecordsetDim str_sql As String: str_sql = "SELECT name  from tickers where ticker = '" & left(small_tick, Len(small_tick) - 3) & "'"Set rec = opt_db.OpenRecordset(str_sql)rec.MoveFirstDo While Not rec.EOFget_name_db = rec.fields(0).Valuerec.MoveNextLooprec.CloseEnd Function
